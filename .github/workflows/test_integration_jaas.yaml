# A similar set of tests to test_integration but against a JAAS controller
name: Integration tests with JAAS

# This GitHub action runs your tests for each pull request.
on:
  pull_request:
    paths-ignore:
      - "README.md"
      - "project-docs/**"
      - ".github/ISSUE_TEMPLATE/**"
      - ".github/PULL_REQUEST_TEMPLATE.md"
  push:
    branches:
      - "main"
    paths-ignore:
      - "README.md"
      - "project-docs/**"
      - ".github/ISSUE_TEMPLATE/**"
      - ".github/PULL_REQUEST_TEMPLATE.md"
  workflow_dispatch:

# Testing only needs permissions to read the repository contents.
permissions:
  contents: read

jobs:
  # Ensure project builds before running testing matrix
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"
          cache: true
      - run: go build -v .

  # Run acceptance tests in a matrix with Terraform CLI versions
  test:
    name: Integration
    needs: build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"
          cache: true
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ matrix.terraform }}
          terraform_wrapper: false
      # Starting JAAS will start the JIMM controller and dependencies and create a Juju controller on LXD and connect it to JIMM.
      - name: Setup JAAS
        uses: canonical/jimm/.github/actions/test-server@v3.1.8
        id: jaas
        with:
          jimm-version: v3.1.8
          juju-channel: 3/stable
          ghcr-pat: ${{ secrets.GHCR_JAAS_PAT }}
      # TODO(Kian): Verify whether this is needed.
      - name: Create additional networks when testing with LXD
        if: ${{ matrix.action-operator.cloud == 'lxd' }}
        run: |
          sudo lxc network create management-br ipv4.address=10.150.40.1/24 ipv4.nat=true ipv6.address=none ipv6.nat=false
          sudo lxc network create public-br ipv4.address=10.170.80.1/24 ipv4.nat=true ipv6.address=none ipv6.nat=false
      - name: "Set environment to configure provider"
        # language=bash
        run: |
          CONTROLLER=$(juju whoami --format yaml | yq .controller)

          echo "JUJU_AGENT_VERSION=$(juju show-controller | yq .$CONTROLLER.details.agent-version |tr -d '"')" >> $GITHUB_ENV
          echo "JUJU_CONTROLLER_ADDRESSES=$(juju show-controller | yq .$CONTROLLER.details.api-endpoints | yq -r '. | join(",")')" >> $GITHUB_ENV
          echo "JUJU_CLIENT_ID="${{ steps.jaas.outputs.client-id }}"  >> $GITHUB_ENV
          echo "JUJU_CLIENT_SECRET="${{ steps.jaas.outputs.client-secret }}"  >> $GITHUB_ENV
          echo "JUJU_CA_CERT<<EOF" >> $GITHUB_ENV
          "${{ steps.jaas.outputs.ca-cert }}" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
          echo "TEST_MANAGEMENT_BR=10.150.40.0/24" >> $GITHUB_ENV
          echo "TEST_PUBLIC_BR=10.170.80.0/24" >> $GITHUB_ENV
      - run: go mod download
      - env:
          TF_ACC: "1"
          TEST_CLOUD: "lxd"
        run: go test -parallel 1 -timeout 40m -v -cover ./internal/provider/
        timeout-minutes: 40
